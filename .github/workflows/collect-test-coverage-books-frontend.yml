name: 'Collect Test Coverage books-frontend'

on:
  pull_request:
    types:
      - opened
      - labeled
      - synchronize
      - reopened
    branches:
      - main
    paths:
      - 'src/**'

env:
  NODE_VERSION: 18

# defaults:
#   run:
#     working-directory: ''

jobs:
  collect-test-coverage:
    name: 'Collect Test Coverage'
    if: startsWith(github.head_ref, 'feature/') && contains(github.event.pull_request.labels.*.name, 'test')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: yarn install

      - name: Run Test Code On Current Branch
        run: yarn test

      - name: Save Current Test Coverage
        id: current
        run: echo "total_line=$(cat coverage/coverage-summary.json | jq '.total.lines.total')" >> $GITHUB_OUTPUT

      - name: Checkout Base Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - name: Run Test Code On Base Branch
        run: yarn test

      - name: Save Base Test Coverage
        id: base
        run: echo "total_line=$(cat coverage/coverage-summary.json | jq '.total.lines.total')" >> $GITHUB_OUTPUT

      - name: Update PR Description
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: '${{ steps.base.outputs.total_line }} -> ${{ steps.current.outputs.total_line }}',
            })
